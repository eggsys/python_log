dataset_1 = [-446,-261,-169,105,103,101,97,94,91,88,86,85,84,83,84,90,96,100,103,101,100,103,107,109,111,109,107,107,105,101,98,94,93,90,88,85,84,90,96,102,107,105,99,93,87,84,84,84,84,81,80,78,76,74,71,69,68,67,65,63,61,60,61,68,73,79,84,81,81,81,80,80,78,76,75,74,69,65,61,59,60,62,62,63,70,76,81,85,84,81,80,79,77,76,75,74,74,75,76,77,75,73,70,68,66,65,65,72,79,85,90,89,86,85,84,81,80,79,77,76,74,73,72,71,71,69,67,65,63,62,63,70,76,81,85,84,81,80,79,77,74,70,67,65,65,65,65,66,66,65,64,62,62,62,63,67,71,74,78,74,74,73,72,72,70,67,65,65,65,66,66,66,65,65,64,64,64,68,72,76,79,78,77,76,75,72,70,67,65,65,66,67,67,67,65,65,65,66,71,75,79,83,81,80,79,78,75,73,70,68,68,68,68,68,68,68,68,67,65,65,66,72,76,80,84,83,81,80,76,73,70,68,68,68,68,68,68,68,68,68,68,68,68,68,71,75,79,83,81,78,74,70,68,68,68,68,68,68,68,68,68,68,67,66,65,64,64,67,70,74,74,71,68,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,68,71,74,78,78,74,71,68,65,65,65,65,65,65,65,65,65,65,65,65,65,64,64,67,70,74,78,78,78,77,76,75,75,74,71,69,66,65,65,65,65,65,65,65,65,69,74,78,81,80,79,78,77,76,75,75,74,73,70,68,66,65,65,66,66,65,64,62,67,72,77,81,80,79,79,83,86,90,93,93,91,89,88,86,85,86,88,88,89,88,85,84,83,83,83,87,91,95,98,96,94,93,93,91,93,93,93,94,93,93,91,91,91,89,90,90,90,98,104,109,115,113,111,109,107,105,103,101,100,98,96,94,93,93,86,79,73,65,64,63,62,69,75,82,86,85,84,81,80,79,77,76,75,74,73,70,68,67,66,66,65,64,62,62,62,62,67,72,77,83,81,80,79,77,76,75,74,73,69,66,64,63,65,65,65,63,62,62,63,70,76,81,85,84,81,80,79,77,76,75,74,71,69,66,65,65,65,65,63,62,62,66,70,74,78,80,83,85,92,97,102,105,103,101,100,97,94,92,90,90,90,89,86,85,84,81,83,84,92,101,106,111,109,107,105,103,101,100,98,96,94,93,93,93,90,88,85,83,81,83,84,92,101,108,113,111,109,107,105,103,101,100,98,96,94,93,93,91,89,81,74,68,62,62,68,74,81,86,]
dataset_2 = [71.7264,49,69,-453,-272,-82,89,86,85,83,78,75,72,70,69,68,66,65,63,69,77,88,100,101,103,100,91,89,86,85,88,83,80,77,75,74,72,69,66,65,65,72,79,86,91,90,90,90,90,84,83,81,79,83,80,78,76,74,71,69,68,69,75,82,87,91,90,89,86,85,84,81,80,79,79,80,80,80,78,74,72,69,67,66,67,73,80,87,91,90,89,86,85,81,77,74,72,74,75,75,73,72,70,69,68,68,73,78,83,86,85,84,80,77,74,71,70,69,68,68,68,68,68,68,68,67,66,65,70,75,79,80,75,71,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,66,65,69,74,78,79,75,71,68,68,68,68,68,68,68,68,68,68,69,69,69,68,66,65,69,74,78,83,78,74,69,65,65,65,65,65,65,65,65,66,67,68,68,67,66,65,65,66,67,71,75,79,79,75,71,68,68,68,69,71,73,73,71,70,68,68,68,68,68,68,71,75,79,83,81,78,74,70,68,69,71,73,75,74,73,71,69,68,68,68,76,84,91,96,96,96,96,96,94,88,87,86,83,85,83,80,78,74,72,69,68,69,77,83,89,94,91,90,89,86,82,81,80,77,78,77,74,74,72,71,71,71,78,83,89,94,91,90,89,83,79,75,74,75,77,78,76,75,74,73,73,73,78,82,86,89,88,86,83,80,77,75,75,75,75,75,75,75,74,73,72,72,73,78,79,79,79,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,74,73,72,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,70,69,68,68,68,69,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,70,69,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,66,65,63,62,62,62,62,62,63,64,65,65,65,65,65,65,61,57,53,49,49,46,45,50,56,62,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,72,77,81,84,81,77,74,71,71,71,71,71,72,73,73,73,71,69,68,68,69,73,77,81,84,84,84,80,77,74,71,71,71,72,73,74,74,73,72,71,70,73,78,83,88,89,88,86,85,82,79,77,75,75,75,75,75,75,74,73,72,71,71,71,75,79,83,86,85,81,77,74,71,71,71,71,71,71,71,72,72,72,72,71,74,77,81,85,82,79,75,71,71,71,71,71,71,71,71,71,71,71,70,69,68,68,68,69,70,70,69,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68]
#lst = [10,10,10,20,20,20,30,30]
dataset_3 = [-462,-283,-194,73,70,68,66,65,70,76,82,88,88,86,85,84,81,80,79,77,76,75,75,74,73,72,69,68,66,64,63,62,61,68,74,81,86,85,84,81,80,79,77,76,76,76,76,76,74,70,69,67,65,66,65,62,60,58,57,57,56,53,50,188,172,159,138,121,109,100,100,112,125,137,134,131,127,121,130,125,120,115,111,107,103,101,98,96,93,88,84,80,78,76,74,72,80,89,96,103,101,98,96,94,91,90,89,88,86,85,84,81,79,77,75,74,73,72,72,77,83,87,90,89,86,85,84,81,80,76,75,74,74,75,73,71,69,68,73,78,83,88,86,82,78,74,71,71,71,71,71,71,71,71,71,71,70,69,68,68,69,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,70,69,68,68,68,68,68,68,68,68,68,68,68,67,66,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,64,63,62,62,62,62,63,65,66,68,68,68,68,68,68,68,68,69,69,69,68,63,51,50,54,63,73,77,81,78,74,70,68,68,68,69,71,72,73,72,70,73,76,79,83,83,83,83,81,80,79,78,75,73,70,68,69,70,71,72,70,63,58,53,49,54,64,75,84,90,89,88,86,85,84,81,80,79,78,77,76,74,73,72,71,68,66,64,61,61,61,68,73,83,91,92,93,90,89,86,85,83,80,78,74,72,69,68,69,77,83,89,94,91,95,98,100,103,100,96,94,91,88,84,80,78,79,86,93,101,107,105,103,101,98,96,94,91,90,88,85,84,83,81,80,78,76,75,75,75,80,84,89,93,91,90,89,88,85,83,80,78,78,78,78,78,77,76,75,74,72,71,70,74,79,83,83,79,75,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,74,77,77,76,72,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,70,71,71,71,71,71,71,71,71,71,71,72,73,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,74,73,72,71,71,71,71,71,71,71,71,71,71,71,71,71,69,68,66,65,65,65,65,65,66,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,67,65,64,62,66,70,74,78,78,77,74,70,67,65,65,66,68,69,70,69,68,67,71,74,78,83,83,81,80,79,78,77,76,75,73,71,69,68,69,65,60,55,55,60,66,79,86,93]

dataset_4 = [44,53,62,84,98,111,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,115,106,97,88,88,88,88,88,88,88,91,94,95,96,94,93,93,93,93,93,93,93,93,93,103,114,125,136,136,136,136,136,136,136,136,136,125,114,103,93,93,93,93,93,93,93,86,80,74,68,68,68,68,68,68,68,68,46,56,65,75,75,75,70,66,62,58,60,58,64,70,76,89,95,101,107,107,107,107,107,107,107,107,107,105,103,101,100,100,100,100,100,100,100,100,100,100,100,95,91,87,83,83,83,81,79,72,65,60,54,54,57,61,64,64,61,58,55,53,51,49,48,48,48,48,48,48,49,51,52,53,53,53,53,56,60,64,67,65,60,54,50,46,46,46,46,46,46,46,46,47,49,50,51,51,52,56,59,63,67,67,68,68,68,68,69,70,71,71,71,71,71,71,71,70,69,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,68,68,68,68,71,75,79,79,75,71,68,68,68,68,68,68,68,68,68,68,68,68,68,68,73,76,76,80,75,71,71,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,73,73,73,73,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,73,77,80,79,75,71,68,68,68,68,68,68,68,68,68,69,69,69,68,68,68,68,73,78,81,85,84,83,81,80,79,78,77,75,73,72,72,72,71,70,68,68,68,69,73,78,81,84,84,83,81,80,79,76,74,72,71,71,71,71,71,70,69,68,67,67,67,71,75,79,83,81,80,76,75,74,74,74,71,69,68,68,68,69,69,69,68,67,67,67,71,75,79,81,80,79,78,77,76,75,75,74,72,70,68,68,68,68,67,66,65,64,64,64,64,68,71,74,78,77,76,75,72,70,67,65,65,65,65,65,65,65,65,64,63,62,62,63,67,71,74,78,77,76,75,75,74,71,69,66,65,65,65,66,67,66,65,63,62,62,63,67,71,74,78,77,76,75,75,74,73,70,68,66,65,65,65,65,66,66,65,64,62,62,63,67,71,74,78,77,76,75,72,70,67,65,65,65,65,65,65,65,65,65,65,65,64,64,68,69,69,69,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,64,68,73,77,81,80,79,78,77,76,73,70,67,65,65,65,65,65,65,65,66,66,66,65,65,65,69,74,77,80,79,78,77,74,70,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]



def cal_common(lst):
    temp = 0.0
    max = 0
    lst_count = [[x, lst.count(x)] for x in set(lst)]
    print (lst_count)
    for x in lst_count:
        #print(x[0],x[1])
        if(int(x[1]) > temp):
            temp = x[1]
            max = x

    print("common data : ",max[0],"| count :",max[1])
    return max[0]

var_a = cal_common(dataset_1)
cal_common(dataset_2)
cal_common(dataset_3)
cal_common(dataset_4)



print("==============================")
print(var_a)
# remove count <= 1 
#lst_count = [x for x in set(lst) if lst.count(x) > 1 ]
#print (lst_count)
# [1, 2]

# get 1 or 2 by index
#print (lst_count[0], lst_count[1])
# 1 2